# This is for fzf from vim so that it will ignore stuff from .gitignore etc
_shell="$(basename "${SHELL}")"
_shell_setup="${HOME}/.fzf.${_shell}"

[ -e "${_shell_setup}" ] && source "${_shell_setup}"

fzf_default_opts+=(
  "--layout=reverse"
  "--info=inline"
  "--height=40%"
  "--multi"
  "--preview='${FZF_PREVIEW}'"
  "--preview-window='${FZF_PREVIEW_WINDOW}'"
  "--color=bg+:#414559,bg:#303446,spinner:#f2d5cf,hl:#e78284"
  "--color=fg:#c6d0f5,header:#e78284,info:#ca9ee6,pointer:#f2d5cf"
  "--color=marker:#f2d5cf,fg+:#c6d0f5,prompt:#ca9ee6,hl+:#e78284"
  "--prompt='∼ '"
  "--pointer='▶'"
  "--marker='✓'"
  "--border='rounded' --border-label='' --preview-window='border-rounded'"
  "--bind '?:toggle-preview'"
  "--bind 'ctrl-a:select-all'"
  "--bind 'ctrl-e:execute(nvim {+} >/dev/tty)'"
)
if _command_exists pbcopy; then
  # On macOS, make ^Y yank the selection to the system clipboard. On Linux you can alias pbcopy to `xclip -selection clipboard` or corresponding tool.
  fzf_default_opts+=("--bind 'ctrl-y:execute-silent(echo {+} | pbcopy)'")
fi
export FZF_DEFAULT_OPTS=$(printf '%s\n' "${fzf_default_opts[@]}")

if command -v rg > /dev/null ; then
  FZF_DEFAULT_COMMAND='rg --files --hidden --follow'
  for ignore in "*.pyc" "idl/*" "go-build/*" "vendor/*" ; do
    FZF_DEFAULT_COMMAND+=" --glob \"!${ignore}\""
  done

  export FZF_DEFAULT_COMMAND
  export FZF_CTRL_T_COMMAND="${FZF_DEFAULT_COMMAND}"
elif command -v ag > /dev/null ; then
  export FZF_DEFAULT_COMMAND='ag -g ""'
  export FZF_CTRL_T_COMMAND="${FZF_DEFAULT_COMMAND}"
fi
