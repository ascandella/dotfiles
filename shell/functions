#
# Functions
#

psgrep() {
  if [ -n "$1" ] ; then
    ps aux | grep $1 | grep -v grep
  else
    _internal_error "Need name to grep for"
  fi
}

pushdot() {
  [ -z "$1" ] && _internal_error "Need a commit message" && return 1
  pushd ~/.dotfiles
  git add .
  git commit -n -m "$*"
  git push origin master
  popd
}

watch-test() {
  [ -z "$1" ] && _internal_error "Need a target" && return 1
  fswatch -o -e "\.pyc" $@ | xargs -n1 -I{} make
}

alias gcm >/dev/null && unalias gcm
# Allow git commit -m and auto-quote arguments
gcm () {
  git commit -m "$*"
}
gcmn () {
  git commit -m "$*" -n
}

# no-verify version of gcm
gcmn () {
  git commit -n -m "$*"
}

_branch_candidates() {
  git branch | grep -v '^*' | sed 's/^  //' | grep '^DEV-'
}
# Change branch, autocomplete with DEV- prefix
gcb() {
  local args="$@"
  if [[ -z "${args}" ]] ; then
    args="$(_branch_candidates | head -n1)"
  fi
  git checkout "${args}"
}
_gcb() {
  _arguments "1: :($(_branch_candidates))"
}
compdef _gcb gcb

# Change to root with SSH agent etc
alias sus='sudo -HE -s'

rmbrokensym () {
  find . -maxdepth 1 -type l ! -exec test -e {} \; -delete
}

# Ag in vim
va () {
  vim +"Ag $*"
}
